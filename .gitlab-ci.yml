.runner-tags: &runner-tags
    tags:
        - docker

.node: &node-common
    image: node:12
    before_script:
        - npm install
    cache:
        key: "$CI_PIPELINE_ID"
        paths:
            - node_modules/
    <<: *runner-tags

.python: &py-common
    image: python:latest
    before_script:
        - pip install awscli
    cache:
        paths:
            - pip-cache
    <<: *runner-tags

stages:
    - preflight
    - build
    - deploy

preflight:
    <<: *node-common
    stage: preflight
    script:
        - npm run lint

build:prod:
    <<: *node-common
    dependencies:
        - preflight
    stage: build
    artifacts:
        name: "PROD_${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
        paths:
            - dist
        expire_in: 1 day
    script:
        - npm run build

deploy:prod:
    <<: *py-common
    dependencies:
        - build:prod
    stage: deploy
    script:
        - apt-get update
        - apt-get install zip -y
        - zip -r package-$CI_PIPELINE_ID.zip dist public index.js package.json -x "*.ts" "*.map"
        - aws s3 cp package-$CI_PIPELINE_ID.zip s3://${S3_BUCKET}/Collection-$CI_PIPELINE_ID.zip
        - aws elasticbeanstalk create-application-version --application-name Collection --version-label Collection-$CI_PIPELINE_ID --source-bundle S3Bucket=${S3_BUCKET},S3Key=Collection-$CI_PIPELINE_ID.zip
        - aws elasticbeanstalk update-environment --application-name Collection --environment-name Collection-env-2 --version-label Collection-$CI_PIPELINE_ID
    when:
        manual


